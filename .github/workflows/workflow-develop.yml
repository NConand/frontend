name: CI/CD Pipeline - Frontend


on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v2
        
      - name: Mover al directorio de código
        run: cd codeSource

      - name: Ejecutar script de construcción
        run: |
          chmod +x .github/scripts/build.sh
          ./.github/scripts/build.sh
      - name: Save Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: codeSource/out
          
  deploy-tf:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout IaC code
        uses: actions/checkout@v2
        with:
          path: IaC

      - name: List files in IaC/IaC directory
        run: ls -al IaC/IaC
        
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: ../codeSource/out

      - name: Configure AWS credentials
        env:
          AWS-ACCESS-KEY-ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS-SECRET-ACCESS-KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS-SESSION-TOKEN: ${{ secrets.AWS_SECRET_SESSION_TOKEN }}
          AWS-REGION: ${{ secrets.AWS_REGION }}  # Opcional
        run: |
          echo "AWS credentials configured"
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        working-directory: IaC/IaC
        run: terraform init
        env:
          AWS-ACCESS-KEY-ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS-SECRET-ACCESS-KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS-SESSION-TOKEN: ${{ secrets.AWS_SECRET_SESSION_TOKEN }}
          AWS-REGION: ${{ secrets.AWS_REGION }}  # Opcional
        
      - name: List Build Artifacts
        run: ls -R ../codeSource/out
        
      - name: Apply Terraform
        working-directory: IaC/IaC
        
        run: |
          export TF_LOG=DEBUG
          terraform apply -auto-approve -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var "aws_token=${{ secrets.AWS_SECRET_SESSION_TOKEN }}" -var "aws_region=${{ secrets.AWS_REGION }}" -var "build_artifact_path=../codeSource/out"
        env:
          AWS-ACCESS-KEY-ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS-SECRET-ACCESS-KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS-SESSION-TOKEN: ${{ secrets.AWS_SECRET_SESSION_TOKEN }}
          AWS-REGION: ${{ secrets.AWS_REGION }}  # Opcional